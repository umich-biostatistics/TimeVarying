// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// sign_num
int sign_num(double x);
RcppExport SEXP _TimeVarying_sign_num(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(sign_num(x));
    return rcpp_result_gen;
END_RCPP
}
// dloglik_likelihood_stratify
double dloglik_likelihood_stratify(int knot, arma::colvec& facility, arma::colvec& delta, arma::mat& z, arma::mat& b_spline, arma::mat& theta);
RcppExport SEXP _TimeVarying_dloglik_likelihood_stratify(SEXP knotSEXP, SEXP facilitySEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP b_splineSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type knot(knotSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type b_spline(b_splineSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(dloglik_likelihood_stratify(knot, facility, delta, z, b_spline, theta));
    return rcpp_result_gen;
END_RCPP
}
// ddloglik_gradient
List ddloglik_gradient(int knot, arma::colvec& facility, arma::mat& z, arma::colvec& delta, arma::mat& b_spline, arma::mat& theta, int number_facility);
RcppExport SEXP _TimeVarying_ddloglik_gradient(SEXP knotSEXP, SEXP facilitySEXP, SEXP zSEXP, SEXP deltaSEXP, SEXP b_splineSEXP, SEXP thetaSEXP, SEXP number_facilitySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type knot(knotSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type b_spline(b_splineSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type number_facility(number_facilitySEXP);
    rcpp_result_gen = Rcpp::wrap(ddloglik_gradient(knot, facility, z, delta, b_spline, theta, number_facility));
    return rcpp_result_gen;
END_RCPP
}
// GDboost_gradient
List GDboost_gradient(int knot, double rate, arma::colvec& facility, arma::colvec& delta, arma::mat& z, arma::mat& b_spline, arma::mat theta);
RcppExport SEXP _TimeVarying_GDboost_gradient(SEXP knotSEXP, SEXP rateSEXP, SEXP facilitySEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP b_splineSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type knot(knotSEXP);
    Rcpp::traits::input_parameter< double >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type b_spline(b_splineSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(GDboost_gradient(knot, rate, facility, delta, z, b_spline, theta));
    return rcpp_result_gen;
END_RCPP
}
// dloglik_likelihood_gradient
double dloglik_likelihood_gradient(int knot, arma::colvec& facility, arma::colvec& delta, arma::mat& z, arma::mat& b_spline, arma::mat& theta);
RcppExport SEXP _TimeVarying_dloglik_likelihood_gradient(SEXP knotSEXP, SEXP facilitySEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP b_splineSEXP, SEXP thetaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type knot(knotSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type b_spline(b_splineSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type theta(thetaSEXP);
    rcpp_result_gen = Rcpp::wrap(dloglik_likelihood_gradient(knot, facility, delta, z, b_spline, theta));
    return rcpp_result_gen;
END_RCPP
}
// ddloglik
List ddloglik(int knot, arma::colvec& facility, arma::colvec& delta, arma::mat& z, arma::mat& b_spline, arma::mat& theta, int number_facility);
RcppExport SEXP _TimeVarying_ddloglik(SEXP knotSEXP, SEXP facilitySEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP b_splineSEXP, SEXP thetaSEXP, SEXP number_facilitySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type knot(knotSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type b_spline(b_splineSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type number_facility(number_facilitySEXP);
    rcpp_result_gen = Rcpp::wrap(ddloglik(knot, facility, delta, z, b_spline, theta, number_facility));
    return rcpp_result_gen;
END_RCPP
}
// NRloop
List NRloop(int knot, arma::colvec& facility, arma::colvec& delta, arma::mat& z, arma::mat& b_spline, arma::mat& theta, int M_stop, int number_facility, double rate, double tol);
RcppExport SEXP _TimeVarying_NRloop(SEXP knotSEXP, SEXP facilitySEXP, SEXP deltaSEXP, SEXP zSEXP, SEXP b_splineSEXP, SEXP thetaSEXP, SEXP M_stopSEXP, SEXP number_facilitySEXP, SEXP rateSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type knot(knotSEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type facility(facilitySEXP);
    Rcpp::traits::input_parameter< arma::colvec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type z(zSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type b_spline(b_splineSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< int >::type M_stop(M_stopSEXP);
    Rcpp::traits::input_parameter< int >::type number_facility(number_facilitySEXP);
    Rcpp::traits::input_parameter< double >::type rate(rateSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(NRloop(knot, facility, delta, z, b_spline, theta, M_stop, number_facility, rate, tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_TimeVarying_sign_num", (DL_FUNC) &_TimeVarying_sign_num, 1},
    {"_TimeVarying_dloglik_likelihood_stratify", (DL_FUNC) &_TimeVarying_dloglik_likelihood_stratify, 6},
    {"_TimeVarying_ddloglik_gradient", (DL_FUNC) &_TimeVarying_ddloglik_gradient, 7},
    {"_TimeVarying_GDboost_gradient", (DL_FUNC) &_TimeVarying_GDboost_gradient, 7},
    {"_TimeVarying_dloglik_likelihood_gradient", (DL_FUNC) &_TimeVarying_dloglik_likelihood_gradient, 6},
    {"_TimeVarying_ddloglik", (DL_FUNC) &_TimeVarying_ddloglik, 7},
    {"_TimeVarying_NRloop", (DL_FUNC) &_TimeVarying_NRloop, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_TimeVarying(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
